blueprint:
  name: Motion-activated Light or Switch
  description: Turn on a light or switch when motion is detected.
  domain: automation
  source_url: https://github.com/thiagoholder/blueprints/main/motion_light.yaml
  author: Home Assistant
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          filter:
            - device_class: occupancy
              domain: binary_sensor
            - device_class: motion
              domain: binary_sensor
    light_or_switch_target:
      name: Light or Switch
      description: Choose a light or switch to turn on/off
      selector:
        target:
          entity:
            domain:
              - light
              - switch
    no_motion_wait:
      name: Wait time
      description: Time to leave the light or switch on after last motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds

# If motion is detected within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

triggers:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"

actions:
  - alias: "Turn on the light or switch"
    choose:
      - conditions:
          - condition: template
            value_template: "{{ states[trigger.entity_id].domain == 'light' }}"
        sequence:
          - service: light.turn_on
            target: !input light_or_switch_target
      - conditions:
          - condition: template
            value_template: "{{ states[trigger.entity_id].domain == 'switch' }}"
        sequence:
          - service: switch.turn_on
            target: !input light_or_switch_target

  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      - platform: state
        entity_id: !input motion_entity
        from: "on"
        to: "off"

  - alias: "Wait the number of seconds that has been set"
    delay: !input no_motion_wait

  - alias: "Turn off the light or switch"
    choose:
      - conditions:
          - condition: template
            value_template: "{{ states[trigger.entity_id].domain == 'light' }}"
        sequence:
          - service: light.turn_off
            target: !input light_or_switch_target
      - conditions:
          - condition: template
            value_template: "{{ states[trigger.entity_id].domain == 'switch' }}"
        sequence:
          - service: switch.turn_off
            target: !input light_or_switch_target
